defaults: &common-config
  working_directory: ~/zing-mono
  docker:
    - image: circleci/node:10

restore_cache_config: &restore-cache-config
  name: Restore Yarn package cache
  keys:
    - yarn-packages-{{ checksum "yarn.lock" }}

install_deps: &install-deps
  name: Install dependencies
  command: yarn install --frozen-lockfile

save_cache_config: &save-cache-config
  name: Save Yarn package cache
  key: yarn-packages-{{ checksum "yarn.lock" }}
  paths:
    - node_modules

version: 2
jobs:
  install:
    <<: *common-config
    steps:
      - checkout
      - restore_cache: *restore-cache-config
      - run: *install-deps
      - save_cache: *save-cache-config
      - persist_to_workspace:
          root: ~/zing-mono
          paths:
            - .
  lint:
    <<: *common-config
    steps:
      - attach_workspace:
          at: ~/zing-mono
      - run:
          name: Lint JS files
          command: echo "yarn lint:js"
  release-it:
    <<: *common-config
    steps:
      - attach_workspace:
          at: ~/zing-mono
      - run:
          name: Setup github
          command: |
            mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
            git config --global user.name "release-it-bot"
      - run:
          name: Release It!
          command: |
            INCREMENT="-- patch"
            [[ $CIRCLE_BRANCH = release-*  && -z "$CIRCLE_COMPARE_URL" ]] && INCREMENT="-- minor"
            yarn release $INCREMENT --ci
  build:
    <<: *common-config
    steps:
      - attach_workspace:
          at: ~/zing-mono
      - run:
          name: Build
          command: echo "yarn build"
      - persist_to_workspace:
          root: ~/zing-mono
          paths:
            - .
  deploy-test:
    <<: *common-config
    steps:
      - attach_workspace:
          at: ~/zing-mono
      - run:
          name: Install Gcloud
          command: echo "download and install GCloud"
      - run: echo "run GCloud"
      - run:
          environment:
            BASE_API_URL: https://api.test.zing.studio
          name: Deploy to test
          command: echo "yarn deploy:test"

workflows:
  version: 2
  build_deploy_test:
    jobs:
      - install:
          filters:
            branches:
              only: 
                - develop
                - /release-.*/
                - /hotfix-.*/
      - lint:
          requires:
            - install
      - release-it:
          requires:
            - lint
          filters:
            branches:
              ignore:
                - develop
      - build:
          requires:
            - release-it
      - deploy-test:
          requires:
            - build
